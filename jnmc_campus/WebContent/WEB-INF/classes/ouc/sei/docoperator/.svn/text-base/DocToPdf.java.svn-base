/**
 * @author Yang zhilong
 * @function 将doc，xls，ppt文件转换为pdf文件，转换好的pdf文件以原文件名为名称放在同一目录下。
 *  		 注意，这个类使用了jodconverter组件，转换过程是建立在open office打开其服务的情况下进行的。
 *  		 关于打开open office的服务的方法在WEB-INF文件夹下有。应先打开服务再使用附件预览功能。
 * @date 2011-11-05
 * 
 */
package ouc.sei.docoperator;

import java.io.File;

import java.net.ConnectException;

import com.artofsolving.jodconverter.DocumentConverter;
import com.artofsolving.jodconverter.openoffice.connection.OpenOfficeConnection;
import com.artofsolving.jodconverter.openoffice.connection.SocketOpenOfficeConnection;
import com.artofsolving.jodconverter.openoffice.converter.OpenOfficeDocumentConverter;

public class DocToPdf {

	private DocToPdf() {
	}
	
	/**
	 * @function 因为是一个工具类，所以设置为单实例模式
	 */

	private static final DocToPdf util = new DocToPdf();

	/**
	 * 获取Doc2HtmlUtil实例
	 * */
	public static synchronized DocToPdf getOpenOfficeUtilInstance() {
		return util;
	}
	/**
	 * @function 将office文件转换为pdf文件
	 * @param inputFilePath 输入文件地址已经文件名称
	 * @param outputFilePath 输出文件地址以及文件名称
	 */

	public synchronized void documets2Pdf(String inputFilePath,
			String outputFilePath) {
		File inputFile = new File(inputFilePath);
		File outputFile = new File(outputFilePath);

		// connect to an OpenOffice.org instance running on port 8100
		OpenOfficeConnection connection = new SocketOpenOfficeConnection(8100);//链接openoffice的8100端口
		try {
			connection.connect();
		} catch (ConnectException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// convert
		DocumentConverter converter = new OpenOfficeDocumentConverter(
				connection);
		converter.convert(inputFile, outputFile);

		// close the connection
		connection.disconnect();
	}

}
